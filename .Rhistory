readr::write_rds(cv_data, 'cached_positions.rds')
cache_data <- TRUE
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0/edit?usp=sharing",
cache_data = FALSE
)
library(tidyverse)
source("CV_printing_functions.R")
library(tidyverse)
source("CV_printing_functions.R")
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0/edit?usp=sharing",
cache_data = FALSE
)
library(googlesheets4)
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0/edit?usp=sharing",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0/edit?usp=sharing",
cache_data = FALSE
)
devtools::install_github("tidyverse/googlesheets4", force = TRUE)
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0/edit?usp=sharing",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0/",
cache_data = FALSE
)
use_datadriven_cv(
full_name = "Nick Strayer",
data_location = "https://docs.google.com/spreadsheets/d/14MQICF2F8-vf8CKPF1m4lyGKO6_thG-4aSwat1e2TWc",
pdf_location = "https://github.com/nstrayer/cv/raw/master/strayer_cv.pdf",
html_location = "nickstrayer.me/cv/",
source_location = "https://github.com/nstrayer/cv",
output_dir = here(),
open_files = FALSE
)
# This file contains all the code needed to parse and print various sections of your CV
# from data. Feel free to tweak it as you desire!
#' Create a CV_Printer object.
#'
#' @param data_location Path of the spreadsheets holding all your data. This can
#'   be either a URL to a google sheet with multiple sheets containing the four
#'   data types or a path to a folder containing four `.csv`s with the neccesary
#'   data.
#' @param source_location Where is the code to build your CV hosted?
#' @param pdf_mode Is the output being rendered into a pdf? Aka do links need to
#'   be stripped?
#' @param sheet_is_publicly_readable If you're using google sheets for data, is
#'   the sheet publicly available? (Makes authorization easier.)
#' @param cache_data If set to true when data is read in it will be saved to an
#'   `.rds` object so it doesn't need to be repeatedly pulled from google
#'   sheets. This is also nice when you have non-public sheets that don't play
#'   nice with authentication during the knit process.
#' @return A new `CV_Printer` object.
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0/",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0/",
cache_data = FALSE
)
library(tidyverse)
library(googlesheets4)
source("CV_printing_functions.R")
source("CV_printing_functions.R")
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0/",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/14MQICF2F8-vf8CKPF1m4lyGKO6_thG-4aSwat1e2TWc",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0",
cache_data = FALSE
)
devtools::install_github("nstrayer/datadrivencv")
devtools::install_github("nstrayer/datadrivencv")
options("install.lock"=FALSE)
devtools::install_github("nstrayer/datadrivencv")
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0",
cache_data = FALSE
)
datadrivencv::use_datadriven_cv(full_name = "Nguyen Vu Hai")
datadrivencv::use_datadriven_cv(full_name = "My Name")
library(datadrivencv)
devtools::install_github("nstrayer/datadrivencv")
devtools::install_github('ropenscilabs/icon')
remotes::install_github('mitchelloharawild/icons@v0.1.0')
# This script builds both the HTML and PDF versions of your CV
# If you want to speed up rendering for googlesheets driven CVs you can cache a
# version of your data This avoids having to fetch from google sheets twice and
# will speed up rendering. It will also make things nicer if you have a
# non-public sheet and want to take care of the authentication in an interactive
# mode.
# To use, simply uncomment the following lines and run them once.
# If you need to update your data delete the "ddcv_cache.rds" file and re-run
library(tidyverse)
library(googlesheets4)
datadrivencv::use_datadriven_cv(full_name = "My Name")
source("CV_printing_functions.R")
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0",
cache_data = FALSE
)
readr::write_rds(cv_data, 'cached_positions.rds')
cache_data <- TRUE
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE, cache_data = cache_data),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE, cache_data = cache_data),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "strayer_cv.pdf")
cv_data <- create_CV_object(
data_location = "./VuHai-CV.xlsx",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "./VuHai-CV.xlsx",
cache_data = FALSE
)
remove.packages("clock")
install.packages("clock")
install.packages("clock")
cv_data <- create_CV_object(
data_location = "./VuHai-CV.xlsx",
cache_data = FALSE
)
library(clock)
cv_data <- create_CV_object(
data_location = "./VuHai-CV.xlsx",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "VuHai-CV.xlsx",
cache_data = FALSE
)
install.packages("tzdb")
install.packages("tzdb")
cv_data <- create_CV_object(
data_location = "VuHai-CV.xlsx",
cache_data = FALSE
)
library(tidyverse)
cv_data <- create_CV_object(
data_location = "VuHai-CV.xlsx",
cache_data = FALSE
)
library(tidyverse)
install.packages("cli")
library(tidyverse)
source("CV_printing_functions.R")
cv_data <- create_CV_object(
data_location = "VuHai-CV.xlsx",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "./VuHai-CV.xlsx",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "./VuHai-CV.csv",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "VuHai-CV.csv",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "VuHai-CV",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "VuHai-CV.csv",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "./VuHai-CV.csv",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "VuHai-CV.csv",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "",
cache_data = FALSE
)
cache_loc <- "ddcv_cache.rds"
cv_data <- create_CV_object(
data_location = "",
cache_data = FALSE
)
source("CV_printing_functions.R")
cv_data <- create_CV_object(
data_location = "",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0",
cache_data = FALSE
)
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0",
cache_data = FALSE
)
source("CV_printing_functions.R")
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0",
cache_data = FALSE
)
View(cv_data)
# This script builds both the HTML and PDF versions of your CV
# If you want to speed up rendering for googlesheets driven CVs you can cache a
# version of your data This avoids having to fetch from google sheets twice and
# will speed up rendering. It will also make things nicer if you have a
# non-public sheet and want to take care of the authentication in an interactive
# mode.
# To use, simply uncomment the following lines and run them once.
# If you need to update your data delete the "ddcv_cache.rds" file and re-run
library(tidyverse)
library(googlesheets4)
source("CV_printing_functions.R")
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0",
cache_data = FALSE
)
readr::write_rds(cv_data, 'cached_positions.rds')
cache_data <- TRUE
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE, cache_data = cache_data),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE, cache_data = cache_data),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "strayer_cv.pdf")
install.packages("xfun")
# This script builds both the HTML and PDF versions of your CV
# If you want to speed up rendering for googlesheets driven CVs you can cache a
# version of your data This avoids having to fetch from google sheets twice and
# will speed up rendering. It will also make things nicer if you have a
# non-public sheet and want to take care of the authentication in an interactive
# mode.
# To use, simply uncomment the following lines and run them once.
# If you need to update your data delete the "ddcv_cache.rds" file and re-run
library(tidyverse)
library(googlesheets4)
source("CV_printing_functions.R")
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0",
cache_data = FALSE
)
readr::write_rds(cv_data, 'cached_positions.rds')
cache_data <- TRUE
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE, cache_data = cache_data),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE, cache_data = cache_data),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "strayer_cv.pdf")
install.packages("processx")
devtools::install_github('nstrayer/datadrivencv')
devtools::install_github('nstrayer/icon')
evtools::install_github('ropenscilabs/icon')
evtools::install_github('ropenscilabs/icon')
devtools::install_github('ropenscilabs/icon')
devtools::install_github('nstrayer/datadrivencv')
download_academicons()
devtools::install_github('mitchelloharawild/icons')
devtools::install_github('mitchelloharawild/icons',force = TRUE)
devtools::install_github('nstrayer/datadrivencv')
devtools::install_github('nstrayer/datadrivencv')
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0",
cache_data = FALSE
)
library(tidyverse)
source("CV_printing_functions.R")
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0",
cache_data = FALSE
)
readr::write_rds(cv_data, 'cached_positions.rds')
cache_data <- TRUE
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE, cache_data = cache_data),
output_file = "index.html")
remotes::install_github('mitchelloharawild/icons@v0.1.0')
devtools::install_github('nstrayer/datadrivencv')
# This script builds both the HTML and PDF versions of your CV
# If you want to speed up rendering for googlesheets driven CVs you can cache a
# version of your data This avoids having to fetch from google sheets twice and
# will speed up rendering. It will also make things nicer if you have a
# non-public sheet and want to take care of the authentication in an interactive
# mode.
# To use, simply uncomment the following lines and run them once.
# If you need to update your data delete the "ddcv_cache.rds" file and re-run
library(tidyverse)
library(googlesheets4)
source("CV_printing_functions.R")
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0",
cache_data = FALSE
)
readr::write_rds(cv_data, 'cached_positions.rds')
cache_data <- TRUE
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE, cache_data = cache_data),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE, cache_data = cache_data),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "strayer_cv.pdf")
# This script builds both the HTML and PDF versions of your CV
# If you want to speed up rendering for googlesheets driven CVs you can cache a
# version of your data This avoids having to fetch from google sheets twice and
# will speed up rendering. It will also make things nicer if you have a
# non-public sheet and want to take care of the authentication in an interactive
# mode.
# To use, simply uncomment the following lines and run them once.
# If you need to update your data delete the "ddcv_cache.rds" file and re-run
library(tidyverse)
library(googlesheets4)
source("CV_printing_functions.R")
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0",
cache_data = FALSE
)
readr::write_rds(cv_data, 'cached_positions.rds')
cache_data <- TRUE
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE, cache_data = cache_data),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE, cache_data = cache_data),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "strayer_cv.pdf")
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "strayer_cv.pdf")
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "strayer_cv.pdf")
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "strayer_cv.pdf")
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE, cache_data = cache_data),
output_file = tmp_html_cv_loc)
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "strayer_cv.pdf")
cv_data <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1Dy4Frq2zRsqxgDAFu-tfzknEc_GNNtlmYTJICLDqFL0",
cache_data = FALSE
)
readr::write_rds(cv_data, 'cached_positions.rds')
cache_data <- TRUE
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE, cache_data = cache_data),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE, cache_data = cache_data),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "strayer_cv.pdf")
![my image](D:/ẢNH/1.jpg){width=50%, height = 50%}
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE, cache_data = cache_data),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE, cache_data = cache_data),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "strayer_cv.pdf")
knitr::include_graphics("D:\ẢNH\1.jpg")
knitr::include_graphics("D:\\ẢNH\1.jpg")
knitr::include_graphics("D:\\ẢNH\\1.jpg")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE, cache_data = cache_data),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE, cache_data = cache_data),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "strayer_cv.pdf")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE, cache_data = cache_data),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE, cache_data = cache_data),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "strayer_cv.pdf")
knitr::include_graphics("D:\\ẢNH\\1.jpg")
knitr::include_graphics("D:\\ẢNH\\1.jpg")
knitr::include_graphics("D:\\ẢNH\\1.jpg")
knitr::include_graphics("D:\\ẢNH\\1.jpg")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE, cache_data = cache_data),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE, cache_data = cache_data),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "strayer_cv.pdf")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE, cache_data = cache_data),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE, cache_data = cache_data),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "strayer_cv.pdf")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE, cache_data = cache_data),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE, cache_data = cache_data),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "strayer_cv.pdf")
